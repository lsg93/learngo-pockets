// package money_test

// import (
// 	"learngo-pockets/moneyconverter/money"
// 	"testing"
// )

// func TestConvertsSuccesfully(t *testing.T) {

// 	type testCase struct {
// 		convertAmount  string
// 		convertFrom    string
// 		convertTo      string
// 		expectedAmount money.Amount
// 	}

// 	testCases := map[string]testCase{
// 		"1 GBP to USD value": {
// 			convertAmount:  "1",
// 			convertFrom:    "GBP",
// 			convertTo:      "USD",
// 			expectedAmount: money.Amount{},
// 		},
// 		"19.99 USD to GBP value": {
// 			convertAmount:  "19.99",
// 			convertFrom:    "USD",
// 			convertTo:      "GBP",
// 			expectedAmount: money.Amount{},
// 		},
// 	}

// 	for desc, tc := range testCases {
// 		t.Run(desc, func(t *testing.T) {
// 			convertFrom, convertTo := money.SetupTestConversionData(t, tc.convertAmount, tc.convertFrom, tc.convertTo)
// 			gotAmount, gotErr := money.Convert(convertFrom, convertTo)

// 			if gotErr != nil {
// 				t.Fatalf("An error %v was returned and none was expected.", gotErr)
// 			}

// 			if gotAmount != tc.expectedAmount {
// 				t.Errorf("The amount received %v and the expected amount %v were not equal", gotAmount, tc.expectedAmount)
// 			}
// 		})
// 	}
// }